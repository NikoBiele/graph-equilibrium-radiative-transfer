name: Render and Publish

on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Jupyter and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jupyter jupyter-cache

      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Install Julia
        uses: julia-actions/setup-julia@v1
        with:
          version: '1.10'
      
      - name: Install OpenGL dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y xorg-dev mesa-utils xvfb libgl1 freeglut3-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev
    
      - name: Setup virtual display
        run: |
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          sleep 10  # Increase wait time
          echo "DISPLAY=:99" >> $GITHUB_ENV  # Set as persistent env var

      - name: Test OpenGL
        run: |
          DISPLAY=:99 glxinfo | head -20  # Verify OpenGL is working
        env:
          DISPLAY: :99

      - name: Cache Julia
        uses: julia-actions/cache@v1

      - name: Install Julia dependencies and kernel
        shell: julia --project=. {0}
        run: |
          using Pkg
          Pkg.instantiate()
          Pkg.update("RayTraceHeatTransfer")
          Pkg.add("IJulia")
          Pkg.precompile()
          using IJulia
          IJulia.installkernel("julia-1.10")
        env:
          DISPLAY: :99

      - name: Verify Julia kernel installation
        run: |
          jupyter kernelspec list
          quarto check jupyter

      - name: Render Quarto Project
        uses: quarto-dev/quarto-actions/render@v2
        with:
          to: html

      - name: Manually add favicon
        run: |
          cp favicon-transparent.ico _book/
          find _book -name "*.html" -exec sed -i 's|</head>|  <link rel="icon" type="image/x-icon" href="/favicon-transparent.ico">\n</head>|' {} \;

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        if: contains(github.ref, 'main')
        with:
          path: _book

      - name: Deploy to GitHub Pages
        id: deployment
        if: contains(github.ref, 'main')
        uses: actions/deploy-pages@v4